#!/bin/bash

# Compile Inkscape and bundle it as an AppImage on CentOS 7
# By Simon Peter 4/2016
# This script is supposed to run inside a CentOS 7 environment. On a Ubuntu host machine, I used
# the following commands set up a CentOS 7 environment; you can use your own chroot method of choice instead
# or just boot the CentOS-7.0-1406-x86_64-GnomeLive.iso in a virtual machine and run this script inside there.
# 
# wget https://github.com/probonopd/AppImageKit/raw/master/AppImageAssistant.AppDir/testappimage
# sudo bash testappimage CentOS-7.0-1406-x86_64-GnomeLive.iso bash
# wget https://github.com/probonopd/AppImages/raw/master/recipes/inkscape/Recipe
# bash -ex Recipe
#
# For now I have given up on building Inkscape on CentOS 6
# because it needs so many newer versions of the gdk/gtk/gdkmm/gtkmm dependencies
# Help would be greatly appreciated. In the meantime, I am using CentOS 7
# which means that the resulting AppImage will be compatible with fewer older systems
# I compiled successfully using this Recipe on CentOS-7.0-1406-x86_64-GnomeLive.iso
# 
# The resulting AppImage has been tested successfully on
# CentOS-7-x86_64-LiveGNOME-1511.iso
# debian-live-8.0.0-amd64-xfce-desktop+nonfree.iso
# elementary_OS_0.3_freya_amd64.iso
# Fedora-Live-Workstation-x86_64-23-10.iso
# ubuntu-16.04-beta2-desktop-amd64.iso
#
# Does not run on 
# CentOS-7.0-1406-x86_64-GnomeLive.iso
# openSUSE-13.1-GNOME-Live-x86_64.iso
# ./lib/libglibmm-2.4.so.1: undefined symbol: g_variant_parse_error_quark
# According to its changelog, g_variant_parse_error_quark() was removed in glibmm 2.39.93
#
# Does not run on 
# ubuntu-14.04.1-desktop-amd64.iso
# undefined symbol: g_type_check_instance_is_fundamentally_a
# Function g_type_check_instance_is_fundamentally_a was introduced in glib2-2.41.1,

yum -y install wget sudo make which libtool gcc-c++ cairo-devel cairomm-devel glibmm24-devel giomm24-devel pango-devel pangoft2-devel gsl-devel libxslt-devel gc-devel freetype-devel glibmm24-devel libsigc++-devel gtkmm24-devel gc gc-devel lcms2 lcms2-devel libxml2-devel libxslt-devel glibmm24 libsigc++ gtkmm24 intltool boost-devel popt-devel
# ImageMagick-c++-devel ImageMagick-c++ ImageMagick-devel ImageMagick poppler-devel

# Get Inkscape

# Latest released version
# URL=$(wget -q "https://inkscape.org/cs/download/source/" -O - | grep tar.bz2 | head -n 1 | cut -d '"' -f 2)
# wget -c "$URL"
# tar xf inkscape*.tar.bz2
# cd inkscape-*

# Or the development version from bzr:lp (it's dog slow) as long as they have not moved to GitHub yet
# As per #inkscape-devel this is the only way to get the release number
yum -y install bzr
if [ -d inkscape ] ; then
  cd inkscape
  bzr inkscape
else
  bzr checkout lp:inkscape inkscape
  cd inkscape
fi

./autogen.sh
./configure --prefix=/AppDir/usr --enable-binreloc
make -j8
sudo make install

# Note that because Inkscape uses binreloc, we do not need to binary-patch the executable
# because binreloc makes paths relative rather than absolute
# https://github.com/datenwolf/binreloc

############## Compilation and installation succeeded ############## 

cd /AppDir/

# Strip executables; greatly reduces AppImage size
find . -type f -executable -exec strip {} \;

# Copy dependency libraries
mkdir -p ./usr/lib
ldd usr/bin/inkscape | grep "=>" | awk '{print $3}' | xargs -I '{}' cp -v '{}' ./usr/lib || true

# Delete blacklisted files; TODO: Move to a library function
BLACKLISTED_FILES=$(wget -q https://github.com/probonopd/AppImages/raw/master/excludelist -O - | sed '/^\s*$/d' | sed '/^#.*$/d')
echo $BLACKLISTED_FILES
for FILE in $BLACKLISTED_FILES ; do
  FOUND=$(find . -type f -name "${FILE}" 2>/dev/null)
  if [ ! -z "$FOUND" ] ; then
    echo "Deleting blacklisted ${FOUND}"
    rm -f "${FOUND}"
  fi
done

wget -c "https://github.com/probonopd/AppImageKit/releases/download/5/AppRun" # (64-bit)
chmod a+x ./AppRun

VER1=$(./usr/bin/inkscape --version | cut -d " " -f 2)
VER2=$(./usr/bin/inkscape --version | cut -d " " -f 3)
GLIBC_NEEDED=$(find . -type f -executable -exec strings {} \; | grep ^GLIBC_2 | sed s/GLIBC_//g | sort --version-sort | uniq | tail -n 1)
VERSION=$VER1.$VER2.glibc$GLIBC_NEEDED
echo $VERSION

# Workaround for: https://launchpad.net/bugs/1545771
# error: file contains group "Drawing Shortcut Group", but groups extending the format should start with "X-"
cat > inkscape.desktop <<\EOF
[Desktop Entry]
Version=1.0
Name=Inkscape
GenericName=Vector Graphics Editor
X-GNOME-FullName=Inkscape Vector Graphics Editor
Comment=Create and edit Scalable Vector Graphics images
Type=Application
Categories=Graphics;VectorGraphics;GTK;
MimeType=image/svg+xml;image/svg+xml-compressed;application/vnd.corel-draw;application/pdf;application/postscript;image/x-eps;application/illustrator;
Exec=inkscape %F
TryExec=inkscape
Terminal=false
StartupNotify=true
Icon=inkscape
X-Ayatana-Desktop-Shortcuts=Drawing
EOF

cp ./usr/share/icons/hicolor/256x256/apps/inkscape.png .

# AppImageAssistant picks up too small icon if we leave these in (FIXME)
rm -rf usr/share/icons/hicolor/16x16/ usr/share/icons/hicolor/22x22/ usr/share/icons/hicolor/24x24/ usr/share/icons/hicolor/32x32/ usr/share/icons/hicolor/48x48/

APP=Inkscape

# Add desktop integration
XAPP=inkscape
wget -O ./usr/bin/$XAPP.wrapper https://raw.githubusercontent.com/probonopd/AppImageKit/master/desktopintegration
chmod a+x ./usr/bin/$XAPP.wrapper
sed -i -e "s|Exec=$XAPP|Exec=$XAPP.wrapper|g" $XAPP.desktop

# Go out of AppImage
cd ..

wget -c "https://github.com/probonopd/AppImageKit/releases/download/5/AppImageAssistant" # (64-bit)
chmod a+x ./AppImageAssistant
mkdir -p ../out
rm -f ./out/$APP"-"$VERSION"-x86_64.AppImage" || true
./AppImageAssistant ./AppDir/ ./out/$APP"-"$VERSION"-x86_64.AppImage"
