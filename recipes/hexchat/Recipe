APP=hexchat

if [ "$APP" == "" ] ; then
  echo "Environment variable \$APP is missing"
  exit 1
fi

# Determine which architecture should be built
if [[ "$(arch)" = "i686" || "$(arch)" = "x86_64" ]] ; then
  ARCH=$(arch)
else
  echo "Architecture could not be determined"
  exit 1
fi

yum -y install $APP
rm -rf /app /out || true # Clean up from previous runs
mkdir -p /app/usr/bin /app/usr/lib /out
cd /app/

VERSION=$(rpm -qa | grep $APP | cut -d - -f 2)

FILES=$(rpm -qla $APP)
for FILE in $FILES ; do
  if [ -f $FILE ] ; then
    echo $FILE
    cp --parents -rf $FILE ./
  fi
done

# Copy in the indirect dependencies
FILES=$(find . -type f -executable)
DEPS=""
for FILE in $FILES ; do
  ldd "${FILE}" | grep "=>" | awk '{print $3}' | xargs -I '{}' echo '{}' > DEPSFILE
done
DEPS=$(cat DEPSFILE  |sort | uniq)
for FILE in $DEPS ; do
  if [ -f $FILE ] ; then
    echo $FILE
    cp --parents -rf $FILE ./
  fi
done
rm -f DEPSFILE

# We want everything in usr/ inside the AppDir
mv lib*/* usr/ || true
rm -rf ./lib* || true

# Copy desktop file in place
DESKTOP=$(find . -name "$APP.desktop" | head -n 1)
cp $DESKTOP .

# TODO: Maintain a global list of files that should NOT go into the AppImages
# along with a reason

# Workaround for:
# ./lib/libc.so.6: version `GLIBC_2.14' not found (required by /usr/lib64/libogg.so.0)
rm usr/lib/libc.so.6 || true

# Workaround for:
# relocation error: ./lib/libpthread.so.0: symbol __vdso_clock_gettime, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference
rm usr/lib/libpthread.so.0 || true
# Workaround for:
# relocation error: ./lib/librt.so.1: symbol __vdso_clock_gettime, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference
rm usr/lib/librt.so.1 || true

# Workaround for:
# Segmentation fault (core dumped)
# Delete potentially dangerous libraries
rm -f usr/lib/libstdc* usr/lib/libgobject* usr/lib/libc.so.* || true
rm -f usr/lib/libglib-* usr/lib/libgthread-* usr/lib/libuuid.so.1 usr/lib/libdl.so.2 || true
# Do NOT delete libX* because otherwise on Ubuntu 11.04:
# loaded library "Xcursor"

wget -c https://github.com/probonopd/AppImageKit/releases/download/4/AppRun # 64-bit
chmod a+x AppRun

cd -

if [ -z "$NO_DOWNLOAD" ] ; then
wget -c https://github.com/probonopd/AppImageKit/releases/download/4/AppImageAssistant # 64-bit
chmod a+x AppImageAssistant
fi # if [ -z "$NO_DOWNLOAD" ] ; then

if [[ "$ARCH" = "x86_64" ]] ; then
  AI=$APP"-"$VERSION"-x86_64.AppImage"
fi
if [[ "$ARCH" = "i686" ]] ; then
  AI=$APP"-"$VERSION"-i386.AppImage"
fi

echo $AI

rm -f out/$AI || true
mkdir -p out/ || true

./AppImageAssistant app/ out/$AI
